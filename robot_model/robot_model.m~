function robot_model(joint_angles,joint_angles2, pose, footholds)
     % ROBOT_MODEL calculates and plots the hexapod robot
    % input:
    %   joint_angles .. 1x18 matrix of joint angles for individual servos
    %   pose .. [x,y,z,qx,qy,qz,qw] TUM format pose of the whole robot
    %   footholds .. 1x6 matrix defining which legs are in support phase and which are in swing phase   
    
    foottip_poses = zeros(3,6);
    %6 legs, 3 position data (x,y,z) for each leg
    %1st row = 1st leg..
   
    %reordering joint angles according to robot
    joint_angles = joint_angles([1,3,5,2,4,6,7,9,11,8,10,12,13,15,17,14,16,18]); %specific name for each motor
    joint_angles2 = joint_angles2([1,3,5,2,4,6,7,9,11,8,10,12,13,15,17,14,16,18]);
    %18 DOF, 6 LEGS, 3 LINKS PER LEG
    
    
    colors = ['r','k','k','k','k','k'];
    %'k' is black color for the plot
    %'r' to identify leg #1
    %body parameters TABLE II Page 4.
    ya = 0.0605; %p_y links 1, (-2),3, (-4)
    yb = 0.1005; %p_y links 5,6
    xa = 0.1206; %p_x links 1,2, (-3),(-4)
    body_params = [  pi/4,  xa, ya;
                   7*pi/4,  xa,-ya;
                   3*pi/4, -xa, ya;
                   5*pi/4, -xa,-ya;
                     pi/2,   0, yb;
                   3*pi/2,   0,-yb];
    %model parameters
    weight = 2.5;
    g_const = 9.81;
    
    %body pose
    P = eye(4); %identity matrix 4x4
    P(1:3,1:3) = q2r(pose(4:7));
    
    %get foottip position for each leg
    for leg = 0:1:5
        if footholds(leg + 1) == 0
        %transformation to coxa reference frame
        %Multiplication per P is done just in case you give some initial
        %pitch,roll and yaw different than 0.
        %the other matrix multiplied is just to transfer from the world
        %coordinate frame (0,0) in the center of the robot to the coxa
        %frame.
            Ai = P*[cos(body_params(leg+1,1)), -sin(body_params(leg+1,1)), 0, body_params(leg+1,2);
                sin(body_params(leg+1,1)), cos(body_params(leg+1,1)), 0, body_params(leg+1,3);
                0, 0, 1, 0;
                0, 0, 0, 1];
        % plot robot-center to coxa link
        %It plots a line between the center of the robot and the end of the
        %coxa. In other words, it plots the coxa itself.
            plot3([P(1,4) Ai(1,4)],[P(2,4) Ai(2,4)],[P(3,4) Ai(3,4)],colors(leg+1),'Linewidth',2)
            hold on
        
        % D-H notation parameters
        % [alpha, a, phi, d, phi_off]
            params = [0,    0,      joint_angles2(3*leg + 1),  0, 0;
                  pi/2, 0.052,  joint_angles2(3*leg + 2), 0, -0.22;
                  0,    0.066,  joint_angles2(3*leg + 3), 0, -0.807;
                  0,    0.138,  0,      0, 0];
        
        % kinematic chain for each leg using D-H notation
                for i = 1:4
                    T = Ai;
            %calculate next transformation in the kinematic chain
                    Ai =  Ai * dh_matrix(params(i,1),params(i,2),params(i,3)+params(i,5),params(i,4));
            %params(i,3)+params(i,5) = theta_i + theta_off
            %plot the link
                    plot3([T(1,4) Ai(1,4)],[T(2,4) Ai(2,4)],[T(3,4) Ai(3,4)],'k','Linewidth',2)
                    hold on
            
            %plot reference frames
                    x0 = Ai(1:3,1:3)*[1;0;0];
                    y0 = Ai(1:3,1:3)*[0;1;0];
                    z0 = Ai(1:3,1:3)*[0;0;1];
            %quiver3 plots the system coordinate frame in each link, check
            %out the definition made up of x0, y0 and z0.
                    quiver3(Ai(1,4),Ai(2,4),Ai(3,4),x0(1),x0(2),x0(3),0.05,'r','Linewidth',2);
                    quiver3(Ai(1,4),Ai(2,4),Ai(3,4),y0(1),y0(2),y0(3),0.05,'g','Linewidth',2);
                    quiver3(Ai(1,4),Ai(2,4),Ai(3,4),z0(1),z0(2),z0(3),0.05,'b','Linewidth',2);
                end
        
        %save the foottip pose
        %In the 4th col we have the position data who is on the first 3
        %rows (x,y,z).
                        foottip_poses(:,leg+1) = Ai(1:3,4);
        
    
    %footholds are the foottips that are in the swing or support phase.
    %plot foottips
            plot3(foottip_poses(1,footholds==1),foottip_poses(2,footholds==1),foottip_poses(3,footholds==1),'g*','Linewidth',3)
            plot3(foottip_poses(1,footholds==0),foottip_poses(2,footholds==0),foottip_poses(3,footholds==0),'r*','Linewidth',3)
        
        elseif footholds == 1
            Ai = P*[cos(body_params(leg+1,1)), -sin(body_params(leg+1,1)), 0, body_params(leg+1,2);
                sin(body_params(leg+1,1)), cos(body_params(leg+1,1)), 0, body_params(leg+1,3);
                0, 0, 1, 0;
                0, 0, 0, 1];
        % plot robot-center to coxa link
        %It plots a line between the center of the robot and the end of the
        %coxa. In other words, it plots the coxa itself.
            plot3([P(1,4) Ai(1,4)],[P(2,4) Ai(2,4)],[P(3,4) Ai(3,4)],colors(leg+1),'Linewidth',2)
            hold on
        
        % D-H notation parameters
        % [alpha, a, phi, d, phi_off]
            params = [0,    0,      joint_angles(3*leg + 1),  0, 0;
                  pi/2, 0.052,  joint_angles(3*leg + 2), 0, -0.22;
                  0,    0.066,  joint_angles(3*leg + 3), 0, -0.807;
                  0,    0.138,  0,      0, 0];
        
        % kinematic chain for each leg using D-H notation
            for i = 1:4
                T = Ai;
            %calculate next transformation in the kinematic chain
                Ai =  Ai * dh_matrix(params(i,1),params(i,2),params(i,3)+params(i,5),params(i,4));
            %params(i,3)+params(i,5) = theta_i + theta_off
            %plot the link
                plot3([T(1,4) Ai(1,4)],[T(2,4) Ai(2,4)],[T(3,4) Ai(3,4)],'k','Linewidth',2)
                hold on
            
            %plot reference frames
            x0 = Ai(1:3,1:3)*[1;0;0];
            y0 = Ai(1:3,1:3)*[0;1;0];
            z0 = Ai(1:3,1:3)*[0;0;1];
            %quiver3 plots the system coordinate frame in each link, check
            %out the definition made up of x0, y0 and z0.
            quiver3(Ai(1,4),Ai(2,4),Ai(3,4),x0(1),x0(2),x0(3),0.05,'r','Linewidth',2);
            quiver3(Ai(1,4),Ai(2,4),Ai(3,4),y0(1),y0(2),y0(3),0.05,'g','Linewidth',2);
            quiver3(Ai(1,4),Ai(2,4),Ai(3,4),z0(1),z0(2),z0(3),0.05,'b','Linewidth',2);
            end
        
        %save the foottip pose
        %In the 4th col we have the position data who is on the first 3
        %rows (x,y,z).
            foottip_poses(:,leg+1) = Ai(1:3,4);
        
    
    %footholds are the foottips that are in the swing or support phase.
    %plot foottips
            plot3(foottip_poses(1,footholds==1),foottip_poses(2,footholds==1),foottip_poses(3,footholds==1),'g*','Linewidth',3)
            plot3(foottip_poses(1,footholds==0),foottip_poses(2,footholds==0),foottip_poses(3,footholds==0),'r*','Linewidth',3)
        end
    end
end

